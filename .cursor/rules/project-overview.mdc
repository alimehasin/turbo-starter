---
description: 
globs: 
alwaysApply: false
---
# Turbo Starter Project Overview

This is a full-stack TypeScript monorepo built with Turborepo and Bun, containing multiple applications, shared packages and shared configs

## Project Structure

### Applications
- **Backend** ([apps/backend](mdc:apps/backend)): Elysia.js API server with authentication, file handling, and database operations
- **Dashboard** ([apps/dashboard](mdc:apps/dashboard)): Next.js admin dashboard with Mantine UI components, it also uses TRPC for end-to-end typesafty, and it doesn't make any HTTP call to the backend's endpoints
- **Website** ([apps/website](mdc:apps/website)): Next.js public website with shadcn/ui components, it also uses TRPC for end-to-end typesafty, and it doesn't make any HTTP xall to the backend's endpoints

### Shared Packages
- **Database** ([packages/db](mdc:packages/db)): Prisma schema, migrations, and database utilities
- **Storage** ([packages/storage](mdc:packages/storage)): File storage abstraction layer
- **Utils** ([packages/utils](mdc:packages/utils)): Shared utilities, constants, and helper functions
- **TypeScript Configs** ([configs/typescript](mdc:configs/typescript)): Shared TypeScript configurations

## Key Technologies
- **Runtime**: Bun (package manager and runtime)
- **Monorepo**: Turbo for build system and task orchestration
- **Backend**: Elysia.js with TypeScript
- **Frontend**: Next.js 15 with React 19
- **Database**: Prisma ORM with PostgreSQL
- **Authentication**: JWT with bcryptjs
- **UI Libraries**: Mantine (dashboard), shadcn/ui (website)
- **Internationalization**: next-intl for i18n support
- **Code Quality**: Biome for linting and formatting
- **Type Safety**: TypeScript with strict configuration

## Development Commands
- `bun dev`: Start all applications in development mode
- `bun build`: Build all applications for production
- `bun lint`: Run Biome linter across the entire codebase
- `bun typecheck`: Run TypeScript type checking
- `bun db:migrate:dev`: Run database migrations in development
- `bun db:seed`: Seed the database with initial data
