generator client {
  provider     = "prisma-client-js"
  moduleFormat = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FileType {
  Image
  Video
}

enum Gender {
  Male
  Female
}

model Admin {
  id String @id @default(uuid())

  // Credentials
  username String @unique
  password String

  // Profile
  name      String
  phone     String
  birthDate DateTime?

  avatarId String?
  avatar   File?   @relation(fields: [avatarId], references: [id], name: "AdminAvatars")

  // Flags
  isRoot Boolean @default(false)

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  uploads File[]
}

model User {
  id String @id @default(uuid())

  // Credentials
  username String @unique
  password String

  // Profile
  name      String
  phone     String
  birthDate DateTime?
  gender    Gender?

  avatarId String?
  avatar   File?   @relation(fields: [avatarId], references: [id], name: "UserAvatars")

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  uploads File[]
}

model File {
  id String @id @default(uuid())

  key      String   @unique
  size     Int
  type     FileType
  isPublic Boolean  @default(false)

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  admin   Admin?  @relation(fields: [adminId], references: [id])
  adminId String?

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  admins Admin[] @relation("AdminAvatars")
  users  User[]  @relation("UserAvatars")
}
